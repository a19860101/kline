.full-width{
    width: 100%;
}
.center{
    margin: auto;
    float:none!important;
    text-align:center;
}
.clearfix::after {
    content: "";
    display: block;
    clear: both;
}
%col{
    padding: $col-padding;
    float: left;
}
@each $size,$w in $breakpoints{
    @for $i from 1 through $grid{
        @if ($size==all){
            .col-#{$i}{
                @extend %col;
            }
        }
        @else{
            .col-#{$size}-#{$i}{
                @extend %col;
            }
        }
    }
    @media(min-width:$w){
        .fixed-width{
            @if($w==0){
                width: 100%;
            }
            @else{
                width: $w;
            }
            margin:auto;
        }   
    @for $i from 1 through $grid{
        @if($size==all){
            .col-#{$i}{
                width: calc(100% / #{$grid} * #{$i});
                }
        }
        @else{
            .col-#{$size}-#{$i}{
                width: calc(100% / #{$grid} * #{$i});
                }
        }
        }
    }
}
@mixin all{
    @media(min-width: map-get($breakpoints,all)){
        @content;
    }
}
@mixin sm{
    @media(min-width: map-get($breakpoints,sm)){
        @content;
    }
}
@mixin md{
    @media(min-width: map-get($breakpoints,md)){
        @content;
    }
}
@mixin lg{
    @media(min-width: map-get($breakpoints,lg)){
        @content;
    }
}
@mixin xl{
    @media(min-width: map-get($breakpoints,xl)){
        @content;
    }
}
@each $size,$w in $breakpoints{
    @media(min-width:$w){
        @each $dp in $display{
            @if($size==all){
                .dp-#{$dp}{
                    display: $dp;
                }
            }
            @else{
                .dp-#{$size}-#{$dp}{
                    display: $dp;
                }
            }
        }
    }
}